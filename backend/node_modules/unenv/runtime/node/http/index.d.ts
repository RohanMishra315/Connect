import type http from "node:http";
export * from "./internal/consts";
export * from "./internal/request";
export * from "./internal/response";
export declare const createServer: any;
export declare const request: any;
export declare const get: any;
export declare const Server: typeof http.Server;
export declare const OutgoingMessage: typeof http.OutgoingMessage;
export declare const ClientRequest: typeof http.ClientRequest;
export declare const Agent: typeof http.Agent;
export declare const globalAgent: typeof http.globalAgent;
export declare const validateHeaderName: any;
export declare const validateHeaderValue: any;
export declare const setMaxIdleHTTPParsers: any;
export declare const _connectionListener: (...args: any) => any;
export declare const WebSocket: {
    new (url: string | URL, protocols?: string | string[]): WebSocket;
    prototype: WebSocket;
    readonly CONNECTING: 0;
    readonly OPEN: 1;
    readonly CLOSING: 2;
    readonly CLOSED: 3;
};
export declare const CloseEvent: {
    new (type: string, eventInitDict?: CloseEventInit): CloseEvent;
    prototype: CloseEvent;
};
export declare const MessageEvent: {
    new <T>(type: string, eventInitDict?: MessageEventInit<T>): MessageEvent<T>;
    prototype: MessageEvent;
};
declare const _default: typeof http;
export default _default;
