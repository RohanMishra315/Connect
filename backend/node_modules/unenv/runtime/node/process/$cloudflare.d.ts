import type nodeProcess from "node:process";
export { _debugEnd, _debugProcess, _eventsCount, _fatalException, _getActiveHandles, _getActiveRequests, _kill, _preload_modules, _rawDebug, _startProfilerIdleNotifier, _stopProfilerIdleNotifier, _tickCallback, abort, addListener, allowedNodeEnvironmentFlags, arch, argv, argv0, assert, availableMemory, binding, chdir, config, constrainedMemory, cpuUsage, cwd, debugPort, dlopen, emit, emitWarning, eventNames, execArgv, execPath, exit, exitCode, features, getActiveResourcesInfo, getMaxListeners, getegid, geteuid, getgid, getgroups, getuid, hasUncaughtExceptionCaptureCallback, hrtime, initgroups, kill, listenerCount, listeners, loadEnvFile, memoryUsage, moduleLoadList, off, on, once, openStdin, pid, platform, ppid, prependListener, prependOnceListener, rawListeners, reallyExit, release, removeAllListeners, removeListener, report, resourceUsage, setMaxListeners, setSourceMapsEnabled, setUncaughtExceptionCaptureCallback, setegid, seteuid, setgid, setgroups, setuid, sourceMapsEnabled, stderr, stdin, stdout, title, umask, uptime, version, versions, } from "./internal/process";
export declare const getBuiltinModule: (typeof nodeProcess)["getBuiltinModule"];
export declare const env: any, nextTick: any;
declare const _default: typeof globalThis.process;
export default _default;
