export { isExternal } from "./index";
export declare const isAnyArrayBuffer: typeof import("util/types").isAnyArrayBuffer, isArgumentsObject: typeof import("util/types").isArgumentsObject, isArrayBuffer: typeof import("util/types").isArrayBuffer, isArrayBufferView: typeof import("util/types").isArrayBufferView, isAsyncFunction: typeof import("util/types").isAsyncFunction, isBigInt64Array: typeof import("util/types").isBigInt64Array, isBigIntObject: any, isBigUint64Array: typeof import("util/types").isBigUint64Array, isBooleanObject: typeof import("util/types").isBooleanObject, isBoxedPrimitive: typeof import("util/types").isBoxedPrimitive, isCryptoKey: typeof import("util/types").isCryptoKey, isDataView: typeof import("util/types").isDataView, isDate: typeof import("util/types").isDate, isFloat32Array: typeof import("util/types").isFloat32Array, isFloat64Array: typeof import("util/types").isFloat64Array, isGeneratorFunction: typeof import("util/types").isGeneratorFunction, isGeneratorObject: typeof import("util/types").isGeneratorObject, isInt16Array: typeof import("util/types").isInt16Array, isInt32Array: typeof import("util/types").isInt32Array, isInt8Array: typeof import("util/types").isInt8Array, isKeyObject: typeof import("util/types").isKeyObject, isMap: typeof import("util/types").isMap, isMapIterator: typeof import("util/types").isMapIterator, isModuleNamespaceObject: typeof import("util/types").isModuleNamespaceObject, isNativeError: typeof import("util/types").isNativeError, isNumberObject: typeof import("util/types").isNumberObject, isPromise: typeof import("util/types").isPromise, isProxy: typeof import("util/types").isProxy, isRegExp: typeof import("util/types").isRegExp, isSet: typeof import("util/types").isSet, isSetIterator: typeof import("util/types").isSetIterator, isSharedArrayBuffer: typeof import("util/types").isSharedArrayBuffer, isStringObject: typeof import("util/types").isStringObject, isSymbolObject: typeof import("util/types").isSymbolObject, isTypedArray: typeof import("util/types").isTypedArray, isUint16Array: typeof import("util/types").isUint16Array, isUint32Array: typeof import("util/types").isUint32Array, isUint8Array: typeof import("util/types").isUint8Array, isUint8ClampedArray: typeof import("util/types").isUint8ClampedArray, isWeakMap: typeof import("util/types").isWeakMap, isWeakSet: typeof import("util/types").isWeakSet;
declare const _default: any;
export default _default;
