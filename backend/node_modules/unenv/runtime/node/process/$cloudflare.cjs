"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "_debugEnd", {
  enumerable: true,
  get: function () {
    return _process2._debugEnd;
  }
});
Object.defineProperty(exports, "_debugProcess", {
  enumerable: true,
  get: function () {
    return _process2._debugProcess;
  }
});
Object.defineProperty(exports, "_eventsCount", {
  enumerable: true,
  get: function () {
    return _process2._eventsCount;
  }
});
Object.defineProperty(exports, "_fatalException", {
  enumerable: true,
  get: function () {
    return _process2._fatalException;
  }
});
Object.defineProperty(exports, "_getActiveHandles", {
  enumerable: true,
  get: function () {
    return _process2._getActiveHandles;
  }
});
Object.defineProperty(exports, "_getActiveRequests", {
  enumerable: true,
  get: function () {
    return _process2._getActiveRequests;
  }
});
Object.defineProperty(exports, "_kill", {
  enumerable: true,
  get: function () {
    return _process2._kill;
  }
});
Object.defineProperty(exports, "_preload_modules", {
  enumerable: true,
  get: function () {
    return _process2._preload_modules;
  }
});
Object.defineProperty(exports, "_rawDebug", {
  enumerable: true,
  get: function () {
    return _process2._rawDebug;
  }
});
Object.defineProperty(exports, "_startProfilerIdleNotifier", {
  enumerable: true,
  get: function () {
    return _process2._startProfilerIdleNotifier;
  }
});
Object.defineProperty(exports, "_stopProfilerIdleNotifier", {
  enumerable: true,
  get: function () {
    return _process2._stopProfilerIdleNotifier;
  }
});
Object.defineProperty(exports, "_tickCallback", {
  enumerable: true,
  get: function () {
    return _process2._tickCallback;
  }
});
Object.defineProperty(exports, "abort", {
  enumerable: true,
  get: function () {
    return _process2.abort;
  }
});
Object.defineProperty(exports, "addListener", {
  enumerable: true,
  get: function () {
    return _process2.addListener;
  }
});
Object.defineProperty(exports, "allowedNodeEnvironmentFlags", {
  enumerable: true,
  get: function () {
    return _process2.allowedNodeEnvironmentFlags;
  }
});
Object.defineProperty(exports, "arch", {
  enumerable: true,
  get: function () {
    return _process2.arch;
  }
});
Object.defineProperty(exports, "argv", {
  enumerable: true,
  get: function () {
    return _process2.argv;
  }
});
Object.defineProperty(exports, "argv0", {
  enumerable: true,
  get: function () {
    return _process2.argv0;
  }
});
Object.defineProperty(exports, "assert", {
  enumerable: true,
  get: function () {
    return _process2.assert;
  }
});
Object.defineProperty(exports, "availableMemory", {
  enumerable: true,
  get: function () {
    return _process2.availableMemory;
  }
});
Object.defineProperty(exports, "binding", {
  enumerable: true,
  get: function () {
    return _process2.binding;
  }
});
Object.defineProperty(exports, "chdir", {
  enumerable: true,
  get: function () {
    return _process2.chdir;
  }
});
Object.defineProperty(exports, "config", {
  enumerable: true,
  get: function () {
    return _process2.config;
  }
});
Object.defineProperty(exports, "constrainedMemory", {
  enumerable: true,
  get: function () {
    return _process2.constrainedMemory;
  }
});
Object.defineProperty(exports, "cpuUsage", {
  enumerable: true,
  get: function () {
    return _process2.cpuUsage;
  }
});
Object.defineProperty(exports, "cwd", {
  enumerable: true,
  get: function () {
    return _process2.cwd;
  }
});
Object.defineProperty(exports, "debugPort", {
  enumerable: true,
  get: function () {
    return _process2.debugPort;
  }
});

Object.defineProperty(exports, "dlopen", {
  enumerable: true,
  get: function () {
    return _process2.dlopen;
  }
});
Object.defineProperty(exports, "emit", {
  enumerable: true,
  get: function () {
    return _process2.emit;
  }
});
Object.defineProperty(exports, "emitWarning", {
  enumerable: true,
  get: function () {
    return _process2.emitWarning;
  }
});
exports.env = void 0;
Object.defineProperty(exports, "eventNames", {
  enumerable: true,
  get: function () {
    return _process2.eventNames;
  }
});
Object.defineProperty(exports, "execArgv", {
  enumerable: true,
  get: function () {
    return _process2.execArgv;
  }
});
Object.defineProperty(exports, "execPath", {
  enumerable: true,
  get: function () {
    return _process2.execPath;
  }
});
Object.defineProperty(exports, "exit", {
  enumerable: true,
  get: function () {
    return _process2.exit;
  }
});
Object.defineProperty(exports, "exitCode", {
  enumerable: true,
  get: function () {
    return _process2.exitCode;
  }
});
Object.defineProperty(exports, "features", {
  enumerable: true,
  get: function () {
    return _process2.features;
  }
});
Object.defineProperty(exports, "getActiveResourcesInfo", {
  enumerable: true,
  get: function () {
    return _process2.getActiveResourcesInfo;
  }
});
exports.getBuiltinModule = void 0;
Object.defineProperty(exports, "getMaxListeners", {
  enumerable: true,
  get: function () {
    return _process2.getMaxListeners;
  }
});
Object.defineProperty(exports, "getegid", {
  enumerable: true,
  get: function () {
    return _process2.getegid;
  }
});
Object.defineProperty(exports, "geteuid", {
  enumerable: true,
  get: function () {
    return _process2.geteuid;
  }
});
Object.defineProperty(exports, "getgid", {
  enumerable: true,
  get: function () {
    return _process2.getgid;
  }
});
Object.defineProperty(exports, "getgroups", {
  enumerable: true,
  get: function () {
    return _process2.getgroups;
  }
});
Object.defineProperty(exports, "getuid", {
  enumerable: true,
  get: function () {
    return _process2.getuid;
  }
});
Object.defineProperty(exports, "hasUncaughtExceptionCaptureCallback", {
  enumerable: true,
  get: function () {
    return _process2.hasUncaughtExceptionCaptureCallback;
  }
});
Object.defineProperty(exports, "hrtime", {
  enumerable: true,
  get: function () {
    return _process2.hrtime;
  }
});
Object.defineProperty(exports, "initgroups", {
  enumerable: true,
  get: function () {
    return _process2.initgroups;
  }
});
Object.defineProperty(exports, "kill", {
  enumerable: true,
  get: function () {
    return _process2.kill;
  }
});
Object.defineProperty(exports, "listenerCount", {
  enumerable: true,
  get: function () {
    return _process2.listenerCount;
  }
});
Object.defineProperty(exports, "listeners", {
  enumerable: true,
  get: function () {
    return _process2.listeners;
  }
});
Object.defineProperty(exports, "loadEnvFile", {
  enumerable: true,
  get: function () {
    return _process2.loadEnvFile;
  }
});
Object.defineProperty(exports, "memoryUsage", {
  enumerable: true,
  get: function () {
    return _process2.memoryUsage;
  }
});
Object.defineProperty(exports, "moduleLoadList", {
  enumerable: true,
  get: function () {
    return _process2.moduleLoadList;
  }
});
exports.nextTick = void 0;
Object.defineProperty(exports, "off", {
  enumerable: true,
  get: function () {
    return _process2.off;
  }
});
Object.defineProperty(exports, "on", {
  enumerable: true,
  get: function () {
    return _process2.on;
  }
});
Object.defineProperty(exports, "once", {
  enumerable: true,
  get: function () {
    return _process2.once;
  }
});
Object.defineProperty(exports, "openStdin", {
  enumerable: true,
  get: function () {
    return _process2.openStdin;
  }
});
Object.defineProperty(exports, "pid", {
  enumerable: true,
  get: function () {
    return _process2.pid;
  }
});
Object.defineProperty(exports, "platform", {
  enumerable: true,
  get: function () {
    return _process2.platform;
  }
});
Object.defineProperty(exports, "ppid", {
  enumerable: true,
  get: function () {
    return _process2.ppid;
  }
});
Object.defineProperty(exports, "prependListener", {
  enumerable: true,
  get: function () {
    return _process2.prependListener;
  }
});
Object.defineProperty(exports, "prependOnceListener", {
  enumerable: true,
  get: function () {
    return _process2.prependOnceListener;
  }
});
Object.defineProperty(exports, "rawListeners", {
  enumerable: true,
  get: function () {
    return _process2.rawListeners;
  }
});
Object.defineProperty(exports, "reallyExit", {
  enumerable: true,
  get: function () {
    return _process2.reallyExit;
  }
});
Object.defineProperty(exports, "release", {
  enumerable: true,
  get: function () {
    return _process2.release;
  }
});
Object.defineProperty(exports, "removeAllListeners", {
  enumerable: true,
  get: function () {
    return _process2.removeAllListeners;
  }
});
Object.defineProperty(exports, "removeListener", {
  enumerable: true,
  get: function () {
    return _process2.removeListener;
  }
});
Object.defineProperty(exports, "report", {
  enumerable: true,
  get: function () {
    return _process2.report;
  }
});
Object.defineProperty(exports, "resourceUsage", {
  enumerable: true,
  get: function () {
    return _process2.resourceUsage;
  }
});
Object.defineProperty(exports, "setMaxListeners", {
  enumerable: true,
  get: function () {
    return _process2.setMaxListeners;
  }
});
Object.defineProperty(exports, "setSourceMapsEnabled", {
  enumerable: true,
  get: function () {
    return _process2.setSourceMapsEnabled;
  }
});
Object.defineProperty(exports, "setUncaughtExceptionCaptureCallback", {
  enumerable: true,
  get: function () {
    return _process2.setUncaughtExceptionCaptureCallback;
  }
});
Object.defineProperty(exports, "setegid", {
  enumerable: true,
  get: function () {
    return _process2.setegid;
  }
});
Object.defineProperty(exports, "seteuid", {
  enumerable: true,
  get: function () {
    return _process2.seteuid;
  }
});
Object.defineProperty(exports, "setgid", {
  enumerable: true,
  get: function () {
    return _process2.setgid;
  }
});
Object.defineProperty(exports, "setgroups", {
  enumerable: true,
  get: function () {
    return _process2.setgroups;
  }
});
Object.defineProperty(exports, "setuid", {
  enumerable: true,
  get: function () {
    return _process2.setuid;
  }
});
Object.defineProperty(exports, "sourceMapsEnabled", {
  enumerable: true,
  get: function () {
    return _process2.sourceMapsEnabled;
  }
});
Object.defineProperty(exports, "stderr", {
  enumerable: true,
  get: function () {
    return _process2.stderr;
  }
});
Object.defineProperty(exports, "stdin", {
  enumerable: true,
  get: function () {
    return _process2.stdin;
  }
});
Object.defineProperty(exports, "stdout", {
  enumerable: true,
  get: function () {
    return _process2.stdout;
  }
});
Object.defineProperty(exports, "title", {
  enumerable: true,
  get: function () {
    return _process2.title;
  }
});
Object.defineProperty(exports, "umask", {
  enumerable: true,
  get: function () {
    return _process2.umask;
  }
});
Object.defineProperty(exports, "uptime", {
  enumerable: true,
  get: function () {
    return _process2.uptime;
  }
});
Object.defineProperty(exports, "version", {
  enumerable: true,
  get: function () {
    return _process2.version;
  }
});
Object.defineProperty(exports, "versions", {
  enumerable: true,
  get: function () {
    return _process2.versions;
  }
});
var _process2 = require("./internal/process.cjs");
const unpatchedGlobalThisProcess = globalThis["process"];
const getBuiltinModule = exports.getBuiltinModule = unpatchedGlobalThisProcess.getBuiltinModule;
const workerdProcess = getBuiltinModule("node:process");
const {
  env,
  nextTick
} = workerdProcess;
exports.nextTick = nextTick;
exports.env = env;
const _process = {
  /**
   * manually unroll unenv-polyfilled-symbols to make it tree-shakeable
   */
  // @ts-expect-error (not typed)
  _debugEnd: _process2._debugEnd,
  _debugProcess: _process2._debugProcess,
  // TODO: implemented yet in unenv
  //_events,
  _eventsCount: _process2._eventsCount,
  // TODO: implemented yet in unenv
  //_exiting,
  _fatalException: _process2._fatalException,
  _getActiveHandles: _process2._getActiveHandles,
  _getActiveRequests: _process2._getActiveRequests,
  _kill: _process2._kill,
  // TODO: implemented yet in unenv
  //_linkedBinding,
  // TODO: implemented yet in unenv
  //_maxListeners,
  _preload_modules: _process2._preload_modules,
  _rawDebug: _process2._rawDebug,
  _startProfilerIdleNotifier: _process2._startProfilerIdleNotifier,
  _stopProfilerIdleNotifier: _process2._stopProfilerIdleNotifier,
  _tickCallback: _process2._tickCallback,
  abort: _process2.abort,
  addListener: _process2.addListener,
  allowedNodeEnvironmentFlags: _process2.allowedNodeEnvironmentFlags,
  arch: _process2.arch,
  argv: _process2.argv,
  argv0: _process2.argv0,
  assert: _process2.assert,
  availableMemory: _process2.availableMemory,
  binding: _process2.binding,
  chdir: _process2.chdir,
  config: _process2.config,
  constrainedMemory: _process2.constrainedMemory,
  cpuUsage: _process2.cpuUsage,
  cwd: _process2.cwd,
  debugPort: _process2.debugPort,
  dlopen: _process2.dlopen,
  // TODO: implemented yet in unenv
  //domain,
  emit: _process2.emit,
  emitWarning: _process2.emitWarning,
  eventNames: _process2.eventNames,
  execArgv: _process2.execArgv,
  execPath: _process2.execPath,
  exit: _process2.exit,
  exitCode: _process2.exitCode,
  features: _process2.features,
  getActiveResourcesInfo: _process2.getActiveResourcesInfo,
  getMaxListeners: _process2.getMaxListeners,
  getegid: _process2.getegid,
  geteuid: _process2.geteuid,
  getgid: _process2.getgid,
  getgroups: _process2.getgroups,
  getuid: _process2.getuid,
  hasUncaughtExceptionCaptureCallback: _process2.hasUncaughtExceptionCaptureCallback,
  hrtime: _process2.hrtime,
  // TODO: implemented yet in unenv
  //initgroups,
  kill: _process2.kill,
  listenerCount: _process2.listenerCount,
  listeners: _process2.listeners,
  loadEnvFile: _process2.loadEnvFile,
  memoryUsage: _process2.memoryUsage,
  // TODO: implemented yet in unenv
  //moduleLoadList,
  off: _process2.off,
  on: _process2.on,
  once: _process2.once,
  // TODO: implemented yet in unenv
  //openStdin,
  pid: _process2.pid,
  platform: _process2.platform,
  ppid: _process2.ppid,
  prependListener: _process2.prependListener,
  prependOnceListener: _process2.prependOnceListener,
  rawListeners: _process2.rawListeners,
  // TODO: implemented yet in unenv
  //reallyExit,
  release: _process2.release,
  removeAllListeners: _process2.removeAllListeners,
  removeListener: _process2.removeListener,
  report: _process2.report,
  resourceUsage: _process2.resourceUsage,
  setMaxListeners: _process2.setMaxListeners,
  setSourceMapsEnabled: _process2.setSourceMapsEnabled,
  setUncaughtExceptionCaptureCallback: _process2.setUncaughtExceptionCaptureCallback,
  setegid: _process2.setegid,
  seteuid: _process2.seteuid,
  setgid: _process2.setgid,
  setgroups: _process2.setgroups,
  setuid: _process2.setuid,
  sourceMapsEnabled: _process2.sourceMapsEnabled,
  stderr: _process2.stderr,
  stdin: _process2.stdin,
  stdout: _process2.stdout,
  title: _process2.title,
  umask: _process2.umask,
  uptime: _process2.uptime,
  version: _process2.version,
  versions: _process2.versions,
  /**
   * manually unroll workerd-polyfilled-symbols to make it tree-shakeable
   */
  env,
  getBuiltinModule,
  nextTick
};
module.exports = _process;